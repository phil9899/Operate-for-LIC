#include <Stepper.h>

const int stepsPerRevolution = 2048;
const int motorSpeed = 1;  // Motor speed (RPM)
const int stepsPerSecond = stepsPerRevolution * motorSpeed / 60;  // Steps per second

Stepper myStepper(stepsPerRevolution, 8, 10, 9, 11);

const unsigned long runTime = 30 * 60 * 1000; // 30 minutes
const unsigned long motorRunDuration = 1000;  // Run 1s
const unsigned long motorPauseDuration = 9000;  // Pause 9s

const int buttonPin = 2; //Button pin
int buttonState = 0;
int lastButtonState = 0;
boolean motorRunning = false;

void setup() {
  myStepper.setSpeed(motorSpeed);
  pinMode(buttonPin, INPUT_PULLUP);
}

void loop() { //Read the button state
  buttonState = digitalRead(buttonPin);

  if (buttonState != lastButtonState) { //check the button state

    if (buttonState == LOW && !motorRunning) { //Start motor
       unsigned long startTime = millis();
       unsigned long elapsedTime = 0;
    
       while (buttonState == LOW && elapsedTime < runTime) { // Stop motor or until the run out of time
        unsigned long currentTime = millis();
        elapsedTime = currentTime - startTime;

        if (elapsedTime % (motorRunDuration + motorPauseDuration) < motorRunDuration) { // Setting Running time
          myStepper.step(stepsPerSecond); // Run motor for 1s
        } else { // Stop the motor
          myStepper.step(0);
        }

        buttonState = digitalRead(buttonPin); // Check the button
      }

      myStepper.step(0); // Stop
      motorRunning = false;
    }
  }

  lastButtonState = buttonState; // Update last button state
}
